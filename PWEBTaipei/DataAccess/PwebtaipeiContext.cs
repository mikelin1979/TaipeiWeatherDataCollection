// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using PWEBTaipei.Models;

namespace PWEBTaipei.DataAccess
{
    public partial class PwebtaipeiContext : DbContext
    {
        public PwebtaipeiContext()
        {
        }

        public PwebtaipeiContext(DbContextOptions<PwebtaipeiContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TaipeiWeather> TaipeiWeather { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer(PWEBSetting.DBConnection);
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity<TaipeiWeather>(entity =>
            {
                entity.HasKey(e => new { e.Location, e.StartTime,e.EndTime });

                entity.Property(e => e.EndTime).HasColumnType("datetime");

                entity.Property(e => e.Location)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MaxAt).HasColumnName("MaxAT");

                entity.Property(e => e.MaxCi).HasColumnName("MaxCI");

                entity.Property(e => e.MinAt).HasColumnName("MinAT");

                entity.Property(e => e.MinCi).HasColumnName("MinCI");

                entity.Property(e => e.StartTime).HasColumnType("datetime");

                entity.Property(e => e.Uvi).HasColumnName("UVI");

                entity.Property(e => e.Weather)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WeatherDescription).IsRequired();

                entity.Property(e => e.WindDirection)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}